import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'
import * as pltr from 'pltr/v2'
import {
  DeleteConfirmModal,
  ColorPickerColor,
  ItemsManagerModal as UnconnectedItemsManagerModal,
  ListItem,
  PlottrModal as UnconnectedPlottrModal,
  EditAttribute as UnconnectedEditAttribute,
  RichText as UnconnectedRichText,
  editorRegistry,
  Image as UnconnectedImage,
  ImagePicker as UnconnectedImagePicker,
  MiniColorPicker,
  Spinner,
  FunSpinner,
  InputModal,
  ColorPicker as UnconnectedColorPicker,
  Switch,
  CardTemplateDetails,
  PlotlineTemplateDetails as UnconnectedPlotlineTemplateDetails,
  TemplateCreate as UnconnectedTemplateCreate,
  TemplateEdit,
  TemplatePicker as UnconnectedTemplatePicker,
  Beamer,
  LanguagePicker as UnconnectedLanguagePicker,
  CategoryPicker as UnconnectedCategoryPicker,
  CharacterCategoriesModal as UnconnectedCharacterCategoriesModal,
  CharacterDetails as UnconnectedCharacterDetails,
  CharacterEditDetails as UnconnectedCharacterEditDetails,
  CharacterItem as UnconnectedCharacterItem,
  CharacterListView as UnconnectedCharacterListView,
  CustomAttrFilterList as UnconnectedCustomAttrFilterList,
  BookFilterList as UnconnectedBookFilterList,
  CharacterCategoryFilterList as UnconnectedCharacterCategoryFilterList,
  CharactersFilterList as UnconnectedCharactersFilterList,
  PlacesFilterList as UnconnectedPlacesFilterList,
  TagFilterList as UnconnectedTagFilterList,
  GenericFilterList,
  SortList as UnconnectedSortList,
  CharacterView as UnconnectedCharacterView,
  BookSelectList as UnconnectedBookSelectList,
  ErrorBoundary as UnconnectedErrorBoundary,
  SelectList as UnconnectedSelectList,
  TagLabel,
  CustomAttributeModal as UnconnectedCustomAttributeModal,
  SubNav as UnconnectedSubNav,
  ProjectTemplateDetails,
  CharacterTemplateDetails as UnconnectedCharacterTemplateDetails,
} from '../components'

const connector = {
  redux: {
    connect,
    bindActionCreators,
  },
  pltr,
  platform: {},
}

// Platform is an object which provides features which are specific to
// a given platform.  For example, opening a file or a URL.
//
// It should provide the following functions:
// {
//   openExternal: (Url) => IO,
//   log: {
//     info: (String) => IO,
//     error: (String) => IO,
//     warn: (String) => IO,
//   },
//   createErrorReport: (String) => IO,
//   appVersion: String,
//   template: {
//     listTemplates,
//     listCustomTemplates,
//     deleteTemplate,
//     editTemplateDetails,
//     startSaveAsTemplate,
//   },
//   electron?: Electron,
//   settings: {
//     get: String => Any
//   },
// }

export default (platform) => ({
  DeleteConfirmModal,
  ColorPickerColor,
  ItemsManagerModal: UnconnectedItemsManagerModal({ connector, platform }),
  ListItem,
  PlottrModal: UnconnectedPlottrModal({ connector, platform }),
  EditAttribute: UnconnectedEditAttribute({ connector, platform }),
  RichText: UnconnectedRichText({ connector, platform }),
  editorRegistry,
  Image: UnconnectedImage({ connector, platform }),
  ImagePicker: UnconnectedImagePicker({ connector, platform }),
  MiniColorPicker,
  Spinner,
  FunSpinner,
  InputModal,
  ColorPicker: UnconnectedColorPicker({ connector, platform }),
  Switch,
  CardTemplateDetails,
  PlotlineTemplateDetails: UnconnectedPlotlineTemplateDetails({ connector, platform }),
  TemplateCreate: UnconnectedTemplateCreate({ connector, platform }),
  TemplateEdit,
  TemplatePicker: UnconnectedTemplatePicker({ connector, platform }),
  Beamer,
  LanguagePicker: UnconnectedLanguagePicker({ connector, platform }),
  CategoryPicker: UnconnectedCategoryPicker({ connector, platform }),
  CharacterCategoriesModal: UnconnectedCharacterCategoriesModal({ connector, platform }),
  CharacterDetails: UnconnectedCharacterDetails({ connector, platform }),
  CharacterEditDetails: UnconnectedCharacterEditDetails({ connector, platform }),
  CharacterItem: UnconnectedCharacterItem({ connector, platform }),
  CharacterListView: UnconnectedCharacterListView({ connector, platform }),
  CustomAttrFilterList: UnconnectedCustomAttrFilterList({ connector, platform }),
  BookFilterList: UnconnectedBookFilterList({ connector, platform }),
  CharacterCategoryFilterList: UnconnectedCharacterCategoryFilterList({ connector, platform }),
  CharactersFilterList: UnconnectedCharactersFilterList({ connector, platform }),
  PlacesFilterList: UnconnectedPlacesFilterList({ connector, platform }),
  TagFilterList: UnconnectedTagFilterList({ connector, platform }),
  GenericFilterList,
  SortList: UnconnectedSortList({ connector, platform }),
  CharacterView: UnconnectedCharacterView({ connector, platform }),
  BookSelectList: UnconnectedBookSelectList({ connector, platform }),
  ErrorBoundary: UnconnectedErrorBoundary({ connector, platform }),
  SelectList: UnconnectedSelectList({ connector, platform }),
  TagLabel,
  CustomAttributeModal: UnconnectedCustomAttributeModal({ connector, platform }),
  SubNav: UnconnectedSubNav({ connector, platform }),
  ProjectTemplateDetails,
  CharacterTemplateDetails: UnconnectedCharacterTemplateDetails({ connector, platform }),
})
